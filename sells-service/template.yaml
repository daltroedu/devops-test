AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  liftpay-ecommerce

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 120

Parameters:
  env:
    Type: "String"
    Description: Env
    Default: prd
  region:
    Type: "String"
    Description: Region
    Default: us-east-1
  notificationArn:
    Type: "AWS::SSM::Parameter::Value<String>"
    Description: SNS Notification Arn
    Default: /config/api/sns-topic-arn
  frontendUrl:
    Type: "AWS::SSM::Parameter::Value<String>"
    Description: Cloudfront URL
    Default: /config/frontend/url

Resources:
  API:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Sub ${env}

  ApiFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Role: !GetAtt LambdaExecutionRole.Arn
      CodeUri: src/
      Handler: index.handler
      Runtime: nodejs12.x
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref API
            Path: /
            Method: ANY
        ProxyApiGreedy:
          Type: Api
          Properties:
            RestApiId: !Ref API
            Path: /{proxy+}
            Method: ANY
      Environment:
        Variables:
          REGION: !Ref region
          ENV: !Ref env
          SQS_NOTIFY_URL: !Ref notificationArn
          FRONTEND_URL: !Ref frontendUrl

  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:*"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "sns:publish"
                Resource: !Ref notificationArn

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/${env}/hello/"
